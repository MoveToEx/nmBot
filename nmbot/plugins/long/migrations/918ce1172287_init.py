"""init

迁移 ID: 918ce1172287
父迁移: 
创建时间: 2024-09-09 21:57:45.488017

"""
from __future__ import annotations

from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa


revision: str = '918ce1172287'
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = ('long',)
depends_on: str | Sequence[str] | None = None


def upgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('long_bind',
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('accessKey', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uid', name=op.f('pk_long_bind')),
    info={'bind_key': 'long'}
    )
    op.create_table('long_post',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('rating', sa.String(), nullable=False),
    sa.Column('tags', sa.String(), nullable=False),
    sa.Column('image', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_long_post')),
    info={'bind_key': 'long'}
    )
    op.create_table('long_template',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('x', sa.Integer(), nullable=False),
    sa.Column('y', sa.Integer(), nullable=False),
    sa.Column('width', sa.Integer(), nullable=False),
    sa.Column('height', sa.Integer(), nullable=False),
    sa.Column('image', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('name', name=op.f('pk_long_template')),
    info={'bind_key': 'long'}
    )
    op.create_table('long_shortcut',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('pattern', sa.String(), nullable=False),
    sa.Column('group', sa.String(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('post_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['long_post.id'], name=op.f('fk_long_shortcut_post_id_long_post')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_long_shortcut')),
    info={'bind_key': 'long'}
    )
    # ### end Alembic commands ###


def downgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('long_shortcut')
    op.drop_table('long_template')
    op.drop_table('long_post')
    op.drop_table('long_bind')
    # ### end Alembic commands ###
